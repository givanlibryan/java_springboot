/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.22
 * Generated at: 2022-06-22 10:00:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("	<title>JSP Form Login</title>\r\n");
      out.write("	\r\n");
      out.write("	<style>\r\n");
      out.write("		body {font-family: Arial, Helvetica, sans-serif;}\r\n");
      out.write("		form {border: 3px solid #f1f1f1;}\r\n");
      out.write("		\r\n");
      out.write("		input[type=text], input[type=password] {\r\n");
      out.write("		  width: 100%;\r\n");
      out.write("		  padding: 12px 20px;\r\n");
      out.write("		  margin: 8px 0;\r\n");
      out.write("		  display: inline-block;\r\n");
      out.write("		  border: 1px solid #ccc;\r\n");
      out.write("		  box-sizing: border-box;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		button {\r\n");
      out.write("		  background-color: #04AA6D;\r\n");
      out.write("		  color: white;\r\n");
      out.write("		  padding: 14px 20px;\r\n");
      out.write("		  margin: 8px 0;\r\n");
      out.write("		  border: none;\r\n");
      out.write("		  cursor: pointer;\r\n");
      out.write("		  width: 100%;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		button:hover {\r\n");
      out.write("		  opacity: 0.8;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.hellobtn {\r\n");
      out.write("		  width: auto;\r\n");
      out.write("		  padding: 10px 18px;\r\n");
      out.write("		  background-color: #f44336;\r\n");
      out.write("		  color: #FFF;\r\n");
      out.write("		}		\r\n");
      out.write("		\r\n");
      out.write("		.container {\r\n");
      out.write("		  padding: 16px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		span.psw {\r\n");
      out.write("		  float: right;\r\n");
      out.write("		  padding-top: 16px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		/* Change styles for span and cancel button on extra small screens */\r\n");
      out.write("		@media screen and (max-width: 300px) {\r\n");
      out.write("		  span.psw {\r\n");
      out.write("		     display: block;\r\n");
      out.write("		     float: none;\r\n");
      out.write("		  }\r\n");
      out.write("		  .cancelbtn {\r\n");
      out.write("		     width: 100%;\r\n");
      out.write("		  }\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h2 align=\"center\">Form Login</h2>\r\n");
      out.write("	<form action=\"doLogin\" method=\"post\" style=\"margin: auto; width: 50%;\">			\r\n");
      out.write("		<div class=\"container\">			\r\n");
      out.write("	    	<label for=\"uname\"><b>Username</b></label>\r\n");
      out.write("		    <input type=\"text\" placeholder=\"Enter Username\" id=\"username\" name=\"username\" required>\r\n");
      out.write("		\r\n");
      out.write("		    <label for=\"psw\"><b>Password</b></label>\r\n");
      out.write("		    <input type=\"password\" placeholder=\"Enter Password\" id=\"password\" name=\"password\" required>\r\n");
      out.write("		        \r\n");
      out.write("		    <button type=\"submit\">Login</button>\r\n");
      out.write("	  	</div>		\r\n");
      out.write("		<div class=\"container\" style=\"background-color:#f1f1f1\">\r\n");
      out.write("		  	<a href=\"HelloServlet\" >Goto > Hello</a>		  	\r\n");
      out.write("		</div>		\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<!-- Untuk menggunakan Alert Error silahkan hapus kode berikut : required di input username dan password -->\r\n");
      out.write("	");

		String err = (String) request.getAttribute("err");
		if (err!=null){
	
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		alert('");
      out.print(err);
      out.write("')\r\n");
      out.write("	</script>\r\n");
      out.write("	");
 } 
      out.write("\r\n");
      out.write("		\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
